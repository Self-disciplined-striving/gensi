import{z as w,C as M,A as O,d as S,x as P,D as _,E as C,cn as k,r as B,bO as x,aR as I,co as R,cp as F}from"./index-C5NNhcj1.js";const L=w("form",[M("inline",`
 width: 100%;
 display: inline-flex;
 align-items: flex-start;
 align-content: space-around;
 `,[w("form-item",{width:"auto",marginRight:"18px"},[O("&:last-child",{marginRight:0})])])]);var E=function(t,m,i,o){function h(a){return a instanceof i?a:new i(function(f){f(a)})}return new(i||(i=Promise))(function(a,f){function v(n){try{e(o.next(n))}catch(d){f(d)}}function r(n){try{e(o.throw(n))}catch(d){f(d)}}function e(n){n.done?a(n.value):h(n.value).then(v,r)}e((o=o.apply(t,m||[])).next())})};const V=Object.assign(Object.assign({},C.props),{inline:Boolean,labelWidth:[Number,String],labelAlign:String,labelPlacement:{type:String,default:"top"},model:{type:Object,default:()=>{}},rules:Object,disabled:Boolean,size:String,showRequireMark:{type:Boolean,default:void 0},requireMarkPlacement:String,showFeedback:{type:Boolean,default:!0},onSubmit:{type:Function,default:t=>{t.preventDefault()}},showLabel:{type:Boolean,default:void 0},validateMessages:Object}),W=S({name:"Form",props:V,setup(t){const{mergedClsPrefixRef:m}=_(t);C("Form","-form",L,k,t,m);const i={},o=B(void 0),h=r=>{const e=o.value;(e===void 0||r>=e)&&(o.value=r)};function a(r){return E(this,arguments,void 0,function*(e,n=()=>!0){return yield new Promise((d,j)=>{const y=[];for(const u of x(i)){const g=i[u];for(const s of g)s.path&&y.push(s.internalValidate(null,n))}Promise.all(y).then(u=>{const g=u.some(l=>!l.valid),s=[],c=[];u.forEach(l=>{var p,b;!((p=l.errors)===null||p===void 0)&&p.length&&s.push(l.errors),!((b=l.warnings)===null||b===void 0)&&b.length&&c.push(l.warnings)}),e&&e(s.length?s:void 0,{warnings:c.length?c:void 0}),g?j(s.length?s:void 0):d({warnings:c.length?c:void 0})})})})}function f(){for(const r of x(i)){const e=i[r];for(const n of e)n.restoreValidation()}}return I(R,{props:t,maxChildLabelWidthRef:o,deriveMaxChildLabelWidth:h}),I(F,{formItems:i}),Object.assign({validate:a,restoreValidation:f},{mergedClsPrefix:m})},render(){const{mergedClsPrefix:t}=this;return P("form",{class:[`${t}-form`,this.inline&&`${t}-form--inline`],onSubmit:this.onSubmit},this.$slots)}});export{W as N};
